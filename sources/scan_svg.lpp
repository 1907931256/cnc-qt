/* -*-c-*- */

%{
/****************************************************************************
 * C# to Qt portation, Linux developing                                     *
 * flex/bison SVG parser                                                    *
 * Copyright (C) 2015-2018 by Eduard Kalinowski                             *
 * Germany, Lower Saxony, Hanover                                           *
 * eduard_kalinowski@yahoo.de                                               *
 *                                                                          *
 * C# project CNC-controller-for-mk1                                        *
 * https://github.com/selenur/CNC-controller-for-mk1                        *
 *                                                                          *
 * The Qt project                                                           *
 * https://github.com/eduard-x/cnc-qt                                       *
 *                                                                          *
 * CNC-Qt is free software; may be distributed and/or modified under the    *
 * terms of the GNU General Public License version 3 as published by the    *
 * Free Software Foundation and appearing in the file LICENSE_GPLv3         *
 * included in the packaging of this file.                                  *
 *                                                                          *
 * This program is distributed in the hope that it will be useful,          *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of           *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *
 * GNU General Public License for more details.                             *
 *                                                                          *
 * You should have received a copy of the GNU Lesser General Public         *
 * License along with CNC-Qt. If not, see  http://www.gnu.org/licenses      *
 ****************************************************************************/

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-register"
#endif

#if HAVE_CONFIG_H
# include <config.h>
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#ifdef __MINGW32__
#include <io.h>
#endif

#ifdef HAVE_UNISTD_H
#include <unistd.h>
#endif



#if !HAVE_STRCHR
# define strchr  index
# define strrchr rindex
#endif


// this generated header file from parse_svg.ypp
#include "parse_svg.h"


#include "Settings.h"
#include "Gerber.h"

extern int svg_lineno;


%}


WSPACE   [ \t\r\n]+
DIGITS   [0-9]+
INTEGER  [+-]?{DIGITS}
REAL1    [+-]?{DIGITS}?[.,]{DIGITS}
REAL2    [+-]?{DIGITS}[.,]{DIGITS}?
HEXNUM   #[0-9A-F]+
IDNAME   [A-Z]+{DIGITS}?



%option caseless yylineno noyywrap nounput noinput prefix="svg_"


%%

"<"\?.*\?">" { /* fisrt xml line */ } 

"<"{IDNAME}(\:{IDNAME})? {
    svg_lval.s_val = strdup(svg_text);
    return START;
}

\/{IDNAME}(\:{IDNAME})?">" { 
    return STOP;
}

" />" { 
    return STOP;
}

{IDNAME}(\:{IDNAME})?\= {
    svg_lval.s_val = strndup(svg_text, strlen(svg_text) -1);
    return ATTRIBUTE;
}

"\"" {
    /*return QUOTE;*/
}

{INTEGER} { 
    svg_lval.i_val = strtol(svg_text, NULL, 10); 
    return INT; 
}

{HEXNUM} {
    svg_lval.i_val = strtol(&svg_text[1], NULL, 16);
    return HEXVAL;
}

{REAL1}|{REAL2}   {
    std::string s = svg_text;
    std::replace( s.begin(), s.end(), Settings::toDecimalPoint, Settings::fromDecimalPoint);
    svg_lval.f_val = strtof(s.c_str(), NULL);
    
    return FLOAT;
}

{WSPACE} {
     /*return WSPACE;*/
}


<*>. { /* any other character is invalid */
  fprintf (stderr,
       "line %d: syntax error, unrecognized character: `%s'\n",
       svg_lineno, svg_text);
   return InvalidCharacter;
}

%%

                  
