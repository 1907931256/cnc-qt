/* -*-c-*- */

%{
/****************************************************************************
 * C# to Qt portation, Linux developing                                     *
 * flex/bison Gerber parser                                                 *
 * Copyright (C) 2015-2018 by Eduard Kalinowski                             *
 * Germany, Lower Saxony, Hanover                                           *
 * eduard_kalinowski@yahoo.de                                               *
 *                                                                          *
 * C# project CNC-controller-for-mk1                                        *
 * https://github.com/selenur/CNC-controller-for-mk1                        *
 *                                                                          *
 * The Qt project                                                           *
 * https://github.com/eduard-x/cnc-qt                                       *
 *                                                                          *
 * CNC-Qt is free software; may be distributed and/or modified under the    *
 * terms of the GNU General Public License version 3 as published by the    *
 * Free Software Foundation and appearing in the file LICENSE_GPLv3         *
 * included in the packaging of this file.                                  *
 *                                                                          *
 * This program is distributed in the hope that it will be useful,          *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of           *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *
 * GNU General Public License for more details.                             *
 *                                                                          *
 * You should have received a copy of the GNU Lesser General Public         *
 * License along with CNC-Qt. If not, see  http://www.gnu.org/licenses      *
 ****************************************************************************/

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-register"
#endif

#if HAVE_CONFIG_H
# include <config.h>
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#ifdef __MINGW32__
#include <io.h>
#endif

#ifdef HAVE_UNISTD_H
#include <unistd.h>
#endif



#if !HAVE_STRCHR
# define strchr  index
# define strrchr rindex
#endif


// this generated header file from parse_gerber.ypp
#include "parse_gerber.h"


#include "Settings.h"
#include "Gerber.h"

extern int gerber_lineno;
int gerber_charno = 1;

#define YY_USER_ACTION gerber_charno += gerber_leng; 

%}


WSPACE   [ \t\r]+
DIGIT    [0-9]
COMMENT  \(.+\)
EXPONENT [Ee][+-]?{DIGIT}+
INTEGER  [+-]?{DIGIT}+
REAL     [+-]?{DIGIT}+([.,]{DIGIT}+)?{EXPONENT}?
DECIMAL  {DIGIT}+
DIGITS   {DIGIT}+
Eol      \n


%option caseless yylineno noyywrap nounput noinput prefix="gerber_"


%%


^[A-Z]   { 
    gerber_lval.c_val = gerber_text[0]; 
    return NL_CHAR;
}

[A-Z]    { 
    gerber_lval.c_val = gerber_text[0]; 
    return CHAR; 
}


{DIGITS} { 
    gerber_lval.i_val = atoi(gerber_text); 
    return INT; 
}

{REAL}   {
    std::string s = gerber_text;
    std::replace( s.begin(), s.end(), Settings::toDecimalPoint, Settings::fromDecimalPoint);
    gerber_lval.f_val = atof(s.c_str());
    
    return FLOAT;
}


{Eol} { gerber_charno=1; return NEW_LINE; /* call NEW_LINE: push decoded data to vector */ }


^{COMMENT}{Eol}+ { /* new line commentar */}


{COMMENT} { gerber_lval.s_val = strdup(gerber_text); return COMMENTAR; }

"%".*{Eol}+ { /* ignore comments, do nothing */ }

";".*{Eol}+ { /* ignore comments, do nothing */ }


<*>{WSPACE}  { /* skip end of line and spaces */ }

<*>. { /* any other character is invalid */
  fprintf (stderr,
       "line %d pos %d: syntax error, unrecognized character: `%s'\n", gerber_lineno, gerber_charno, gerber_text);
   return InvalidCharacter;
}

%%

                  
